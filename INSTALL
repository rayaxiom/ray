#!/bin/bash
###############################################################################
#
# NOTE: This script is distructive, it will change your dotfiles!
#
# This script creates symlinks from the home directory to any 
# desired dotfiles in ~/ray/dotfiles
# Can be modified to symlink from anywhere to anywhere.
###############################################################################

#==============================================================================
# A few helper functions
#==============================================================================
## A little function 'borrowed' from the tecplot installation script...
OptionPrompt() 
{
 printf "%s " "$1"
}
 
## Another little function 'borrowed' from the tecplot installation script...    
OptionRead()
{
 read Opt
 echo $Opt
}


###############################################################################
#==============================================================================
# Setup post commit hook
#==============================================================================
echo "Symlinking hooks/post-commit"
if [ -e ~/ray/.git/hooks/post-commit ]; then
  echo ".git/hooks/post-commit already exists..."
  echo "I will not symlink to ./hooks/post-commit"
else
  ln -s ~/ray/hooks/post-commit ~/ray/.git/hooks/post-commit
fi

echo "Done symlinking post-commit hook"
echo " "


###############################################################################
#==============================================================================
# Backup and symlink dotfiles
#==============================================================================
dir="ray/dotfiles"          # My dotfiles
dir_old="ray/dotfiles_old"  # Old dotfiles backup directory

## declare an array of files to backup
declare -a files=(".bashrc" \
                  ".bashrc_alias" \
                  ".vimrc" \
                  ".gvimrc")

echo "Moving old files into $dir_old/"
echo " "

## Change to home directory
cd

## now loop through the above array
for file in "${files[@]}"
do
  if [ -e $file ]; then
    mv $file ~/$dir_old/
  else
    echo "$file does not exist"
  fi
  
  echo "Creating symlink to $file in home directory."
  ln -s ~/$dir/$file ~/$file
done

## Linking to files in Dropbox
dir="Dropbox/linux_sync"          # Other sync files
declare -a files=(".ssh/config" \
                  ".vim")

## now loop through the above array
for file in "${files[@]}"
do
  if [ -e ~/$dir/$file ]; then
    if [ -e $file ]; then
      mv $file ~/$dir_old/
    else
      echo "$file does not exist"
    fi
    
    echo "Creating symlink to $file in home directory."
    ln -s ~/$dir/$file ~/$file
  else
    echo "~/$dir/$file does not exist. Perhaps you are not Ray."
  fi
done

echo "All dotfiles are loaded!"
echo " "

###############################################################################
#==============================================================================
# Load completion files
#==============================================================================
OptionPrompt "Do you want to load completion files?"
reply=`OptionRead`
echo " "
if test "$reply" != "y" -a "$reply" != "Y" ; then
  echo "Completion files not loaded."
else
  ## For bin/rbackup
  if [ -e /etc/bash_completion.d/rbackup ];
  then
    echo "/etc/bash_completion.d/rbackup exists."
    echo "I will not load completion for bin/rbackup"
  else
    cp ~/ray/bin/completion/rbackup /etc/bash_completion.d/
    echo "Loaded completion file for rbackup"
  fi
fi


###############################################################################
#==============================================================================
# Load crontab
#==============================================================================
echo " "
echo "Do you want to load Ray's crontab?"
echo "See ~/ray/dotfiles/crontab_$USER$HOSTNAME"
echo "Your current crontab will be stored in"
echo " "
echo "    " $dir_old/
echo " "
echo " "

OptionPrompt " Is this OK? [y/n -- default: n]"
reply=`OptionRead`
if test "$reply" != "y" -a "$reply" != "Y" ; then
  echo "crontab not loaded."
else
  CRONFILE_BK="crontab_${USER}${HOSTNAME}_$(date +"%F")"
  crontab -l > ~/$dir_old/$CRONFILE_BK
  crontab ~/ray/dotfiles/crontab_$USER$HOSTNAME
  echo "Done... your previous crontab is stored in"
  echo " "
  echo "  " ~/$dir_old/$CRONFILE_BK
fi


###############################################################################
echo " "
echo "Finished..."

